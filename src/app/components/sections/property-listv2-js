"use client";

import CardHome from "../ui/card-home";
import { useEffect, useState, memo } from "react";
import { TitleSection } from "../ui/title-section";
import useDestaquesStore from "@/app/store/destaquesStore";

// Componente memoizado para o card de imóvel
const MemoizedCardHome = memo(CardHome);

export function PropertyList() {
  const [imoveisDestaque, setImoveisDestaque] = useState([]);
  const [isLoading, setIsLoading] = useState(true);
  const [error, setError] = useState(null);

  // Obter a função fetchImoveisDestaque do store
  const fetchImoveisDestaque = useDestaquesStore((state) => state.fetchImoveisDestaque);

  useEffect(() => {
    async function loadImoveisDestaque() {
      try {
        setIsLoading(true);
        const imoveis = await fetchImoveisDestaque();
        setImoveisDestaque(imoveis || []);
        setError(null);
      } catch (err) {
        setError(err.message || 'Erro ao carregar imóveis em destaque');
      } finally {
        setIsLoading(false);
      }
    }

    loadImoveisDestaque();
  }, [fetchImoveisDestaque]);

  if (error) {
    return (
      <div className="w-full bg-zinc-100 py-16">
        <div className="container mx-auto">
          <TitleSection
            destaque
            center
            section="Destaque"
            title="Imóveis de Alto Padrão"
            description="Conheca os imóveis em destaque."
          />
          <p className="text-red-500 text-center py-10">Erro: {error}</p>
        </div>
      </div>
    );
  }

  return (
    <section className="w-full bg-zinc-100 py-16">
      <div className="container mx-auto">
        <TitleSection
          destaque
          center
          section="Destaque"
          title="Imóveis de Alto Padrão"
          description="Conheca os imóveis em destaque."
        />
        <div className="flex gap-4 overflow-x-auto pb-4">
          {isLoading ? (
            // Skeleton loading state
            Array.from({ length: 4 }).map((_, index) => (
              <div key={`skeleton-${index}`} className="animate-pulse w-[350px] h-[400px]">
                <div className="h-[220px] bg-gray-200 rounded-t-lg"></div>
                <div className="p-6 bg-white h-[180px]">
                  <div className="h-4 bg-gray-200 rounded w-1/4 mb-2"></div>
                  <div className="h-5 bg-gray-200 rounded w-3/4 mb-2"></div>
                  <div className="h-3 bg-gray-200 rounded w-2/3 mb-4"></div>
                  <div className="flex gap-4 mb-4">
                    {[1, 2, 3, 4].map(i => (
                      <div key={i} className="h-5 bg-gray-200 rounded w-12"></div>
                    ))}
                  </div>
                  <div className="h-6 bg-gray-200 rounded w-1/3 mt-auto"></div>
                </div>
              </div>
            ))
          ) : imoveisDestaque.length > 0 ? (
            imoveisDestaque.map((imovel, index) => (
              <div key={imovel.Codigo || imovel._id || `imovel-${index}`} className="w-[350px]">
                <MemoizedCardHome {...imovel} isLoading={false} />
              </div>
            ))
          ) : (
            <p className="text-center w-full py-8">Nenhum imóvel em destaque encontrado.</p>
          )}
        </div>
      </div>
    </section>
  );
}
